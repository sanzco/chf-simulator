apiVersion: apps/v1
kind: Deployment
metadata:
  name: simulator-app
spec:
  selector:
    matchLabels:
      app: simulator-app
  replicas: 1
  template:
    metadata:
      labels:
        app: simulator-app
    spec:
      containers:
        - name: simulator-app
          image: simulator-app:1.0
          ports:
            - containerPort: 8080
          env:   # Setting Enviornmental Variables
            - name: MYSQL_HOST   # Setting Database host address from configMap
              valueFrom :
                configMapKeyRef :
                  name : chf-configmap
                  key :  MYSQL_HOST

            - name: DB_NAME  # Setting Database name from configMap
              valueFrom :
                configMapKeyRef :
                  name : chf-configmap
                  key :  MYSQL_CHF_DB

            - name: MYSQL_USER  # Setting Database username from Secret
              valueFrom :
                secretKeyRef :
                  name : chf-dbsecret
                  key :  MYSQL_USER

            - name: MYSQL_PASS # Setting Database password from Secret
              valueFrom :
                secretKeyRef :
                  name : chf-dbsecret
                  key :  MYSQL_PASS

---

apiVersion: v1 # Kubernetes API version
kind: Service # Kubernetes resource kind we are creating
metadata: # Metadata of the resource kind we are creating
  name: simulator-app-svc
spec:
  selector:
    app: simulator-app
  ports:
    - protocol: "TCP"
      port: 8080 # The port that the service is running on in the cluster
      targetPort: 8080 # The port exposed by the service
  type: LoadBalancer # type of the service.